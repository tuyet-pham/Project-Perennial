version: "3.2"

services:

# ---- Database
  db:
    container_name: db_data
    build: ./db
    ports:
      - 5986:5986
      - 5984:5984
    expose:
      - 5986
      - 5984
    volumes:
      - db:/opt/couchdb/data
    restart: always

# ---- Django
  djangobackend:
    container_name: djangobackend
    build: ./djangobackend
    volumes:
      - ./djangobackend/:/app/django
    ports:
      - 8000:8000
    expose:
      - 8000
    stdin_open: true
    restart: always
    tty: true
    command: ./entrypoint.sh
    links:
      - db
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}

# ---- ReactJS
  reactfrontend:
    build: ./reactfrontend
    volumes:
      - ./reactfrontend:/app/reactfrontend
      - node-modules:/app/reactfrontend/node_modules
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
    links: 
      - db
      - djangobackend
    depends_on:
      - djangobackend
    command: npm start

# ---- Database data
  data:
    build: ./data
    volumes:
      - ./data:/app/data
    environment:
      - HOST=${HOST}
    links:
      - db
    depends_on:
     - db
    command: ./perennialData.sh
    environment:
      - HOST=${HOST}

  mqttclient:
    build: ./mqtt_client
    volumes:
     - ./mqtt_client:/code
    depends_on:
     - db
    environment:
      - MQTT_BROKER=${MQTT_BROKER}

# ---- Our volumes
volumes:
  db:
  node-modules:
